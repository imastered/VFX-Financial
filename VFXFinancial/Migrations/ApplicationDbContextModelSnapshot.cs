// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VFXFinancial.Data;

#nullable disable

namespace VFXFinancial.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VFXFinancial.Models.CurrencyPair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FromCurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromCurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToCurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToCurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyPairs");
                });

            modelBuilder.Entity("VFXFinancial.Models.ExchangeRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Ask")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CurrencyPairId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyPairId")
                        .IsUnique();

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("VFXFinancial.Models.ExchangeRate", b =>
                {
                    b.HasOne("VFXFinancial.Models.CurrencyPair", null)
                        .WithOne("ExchangeRate")
                        .HasForeignKey("VFXFinancial.Models.ExchangeRate", "CurrencyPairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VFXFinancial.Models.CurrencyPair", b =>
                {
                    b.Navigation("ExchangeRate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
